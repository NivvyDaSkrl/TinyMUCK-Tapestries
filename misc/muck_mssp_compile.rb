#!/usr/bin/env ruby

require 'optparse'
require 'rubygems'
require 'json'

# These are generated by the server.
$reserved = [ 
	"CODEBASE",
	"PLAYERS",
	"UPTIME",
	"AREAS",
	"ROOMS",
	"OBJECTS",
	"DBSIZE",
	"EXITS"
]

$options = {}
OptionParser.new do |opts|
	opts.banner = "Usage: muck_mssp_compile.rb [options]"

	opts.separator ""
	opts.separator "Specific options:"

	opts.on("--db DATABASE", "Specify the mssp jason file to convert.") do |db|
		$options[:db] = File.new(db, "r")
	end

   opts.on("--out DATABASE", "Specify the output mssp text file.") do |db|
      raise "Will not overwrite #{db}" if File.exist?(db)
      $options[:out] = File.new(db, "w")
   end

end.parse!

if $options[:db].class != File then
	$options[:db] = File.new("mssp.json", "r")
end

if $options[:out].class != File then
	f = "mssp.txt"
	raise "Will not overwrite #{f}" if File.exist?(f)
	$options[:out] = File.new(f, "w")
end

# Load the json
msspsrc = JSON.parse($options[:db].read)
out = $options[:out]

# Convert
msspsrc.each { |k,v|

	raise "Can't handle a key with the class #{k.class}" if k.class != String

	case v
	when String, Fixnum
		out.puts("#{k}\t#{v}")
	when Array
		out.write("#{k}\t")
		# really should check the types of each of the values in the array.
		# But I is the lazy.
		out.puts(v.join("\t"))
	else
		raise "Can not handle a value with class #{v.class}"
	end
}

puts "Done."